/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.lmssa.model.impl;

import com.liferay.lmssa.model.ActManAudit;
import com.liferay.lmssa.model.ActManAuditModel;
import com.liferay.lmssa.model.ActManAuditSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ActManAudit service. Represents a row in the &quot;lmssa_ActManAudit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.lmssa.model.ActManAuditModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ActManAuditImpl}.
 * </p>
 *
 * @author TLS
 * @see ActManAuditImpl
 * @see com.liferay.lmssa.model.ActManAudit
 * @see com.liferay.lmssa.model.ActManAuditModel
 * @generated
 */
@JSON(strict = true)
public class ActManAuditModelImpl extends BaseModelImpl<ActManAudit>
	implements ActManAuditModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a act man audit model instance should use the {@link com.liferay.lmssa.model.ActManAudit} interface instead.
	 */
	public static final String TABLE_NAME = "lmssa_ActManAudit";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "actManAuditId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "courseId", Types.BIGINT },
			{ "className", Types.VARCHAR },
			{ "start_", Types.TIMESTAMP },
			{ "end_", Types.TIMESTAMP },
			{ "state_", Types.VARCHAR },
			{ "number_", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table lmssa_ActManAudit (uuid_ VARCHAR(75) null,actManAuditId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,courseId LONG,className VARCHAR(75) null,start_ DATE null,end_ DATE null,state_ VARCHAR(75) null,number_ LONG)";
	public static final String TABLE_SQL_DROP = "drop table lmssa_ActManAudit";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.lmssa.model.ActManAudit"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.lmssa.model.ActManAudit"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.lmssa.model.ActManAudit"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ActManAudit toModel(ActManAuditSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ActManAudit model = new ActManAuditImpl();

		model.setUuid(soapModel.getUuid());
		model.setActManAuditId(soapModel.getActManAuditId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCourseId(soapModel.getCourseId());
		model.setClassName(soapModel.getClassName());
		model.setStart(soapModel.getStart());
		model.setEnd(soapModel.getEnd());
		model.setState(soapModel.getState());
		model.setNumber(soapModel.getNumber());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ActManAudit> toModels(ActManAuditSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ActManAudit> models = new ArrayList<ActManAudit>(soapModels.length);

		for (ActManAuditSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.lmssa.model.ActManAudit"));

	public ActManAuditModelImpl() {
	}

	public long getPrimaryKey() {
		return _actManAuditId;
	}

	public void setPrimaryKey(long primaryKey) {
		setActManAuditId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_actManAuditId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return ActManAudit.class;
	}

	public String getModelClassName() {
		return ActManAudit.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("actManAuditId", getActManAuditId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("courseId", getCourseId());
		attributes.put("className", getClassName());
		attributes.put("start", getStart());
		attributes.put("end", getEnd());
		attributes.put("state", getState());
		attributes.put("number", getNumber());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long actManAuditId = (Long)attributes.get("actManAuditId");

		if (actManAuditId != null) {
			setActManAuditId(actManAuditId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long courseId = (Long)attributes.get("courseId");

		if (courseId != null) {
			setCourseId(courseId);
		}

		String className = (String)attributes.get("className");

		if (className != null) {
			setClassName(className);
		}

		Date start = (Date)attributes.get("start");

		if (start != null) {
			setStart(start);
		}

		Date end = (Date)attributes.get("end");

		if (end != null) {
			setEnd(end);
		}

		String state = (String)attributes.get("state");

		if (state != null) {
			setState(state);
		}

		Long number = (Long)attributes.get("number");

		if (number != null) {
			setNumber(number);
		}
	}

	@JSON
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	public long getActManAuditId() {
		return _actManAuditId;
	}

	public void setActManAuditId(long actManAuditId) {
		_actManAuditId = actManAuditId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	public long getCourseId() {
		return _courseId;
	}

	public void setCourseId(long courseId) {
		_courseId = courseId;
	}

	@JSON
	public String getClassName() {
		if (_className == null) {
			return StringPool.BLANK;
		}
		else {
			return _className;
		}
	}

	public void setClassName(String className) {
		_className = className;
	}

	@JSON
	public Date getStart() {
		return _start;
	}

	public void setStart(Date start) {
		_start = start;
	}

	@JSON
	public Date getEnd() {
		return _end;
	}

	public void setEnd(Date end) {
		_end = end;
	}

	@JSON
	public String getState() {
		if (_state == null) {
			return StringPool.BLANK;
		}
		else {
			return _state;
		}
	}

	public void setState(String state) {
		_state = state;
	}

	@JSON
	public long getNumber() {
		return _number;
	}

	public void setNumber(long number) {
		_number = number;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ActManAudit.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ActManAudit toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (ActManAudit)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		ActManAuditImpl actManAuditImpl = new ActManAuditImpl();

		actManAuditImpl.setUuid(getUuid());
		actManAuditImpl.setActManAuditId(getActManAuditId());
		actManAuditImpl.setCompanyId(getCompanyId());
		actManAuditImpl.setGroupId(getGroupId());
		actManAuditImpl.setUserId(getUserId());
		actManAuditImpl.setCourseId(getCourseId());
		actManAuditImpl.setClassName(getClassName());
		actManAuditImpl.setStart(getStart());
		actManAuditImpl.setEnd(getEnd());
		actManAuditImpl.setState(getState());
		actManAuditImpl.setNumber(getNumber());

		actManAuditImpl.resetOriginalValues();

		return actManAuditImpl;
	}

	public int compareTo(ActManAudit actManAudit) {
		long primaryKey = actManAudit.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		ActManAudit actManAudit = null;

		try {
			actManAudit = (ActManAudit)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = actManAudit.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ActManAuditModelImpl actManAuditModelImpl = this;

		actManAuditModelImpl._originalUuid = actManAuditModelImpl._uuid;

		actManAuditModelImpl._originalCompanyId = actManAuditModelImpl._companyId;

		actManAuditModelImpl._setOriginalCompanyId = false;

		actManAuditModelImpl._originalGroupId = actManAuditModelImpl._groupId;

		actManAuditModelImpl._setOriginalGroupId = false;

		actManAuditModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ActManAudit> toCacheModel() {
		ActManAuditCacheModel actManAuditCacheModel = new ActManAuditCacheModel();

		actManAuditCacheModel.uuid = getUuid();

		String uuid = actManAuditCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			actManAuditCacheModel.uuid = null;
		}

		actManAuditCacheModel.actManAuditId = getActManAuditId();

		actManAuditCacheModel.companyId = getCompanyId();

		actManAuditCacheModel.groupId = getGroupId();

		actManAuditCacheModel.userId = getUserId();

		actManAuditCacheModel.courseId = getCourseId();

		actManAuditCacheModel.className = getClassName();

		String className = actManAuditCacheModel.className;

		if ((className != null) && (className.length() == 0)) {
			actManAuditCacheModel.className = null;
		}

		Date start = getStart();

		if (start != null) {
			actManAuditCacheModel.start = start.getTime();
		}
		else {
			actManAuditCacheModel.start = Long.MIN_VALUE;
		}

		Date end = getEnd();

		if (end != null) {
			actManAuditCacheModel.end = end.getTime();
		}
		else {
			actManAuditCacheModel.end = Long.MIN_VALUE;
		}

		actManAuditCacheModel.state = getState();

		String state = actManAuditCacheModel.state;

		if ((state != null) && (state.length() == 0)) {
			actManAuditCacheModel.state = null;
		}

		actManAuditCacheModel.number = getNumber();

		return actManAuditCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", actManAuditId=");
		sb.append(getActManAuditId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", courseId=");
		sb.append(getCourseId());
		sb.append(", className=");
		sb.append(getClassName());
		sb.append(", start=");
		sb.append(getStart());
		sb.append(", end=");
		sb.append(getEnd());
		sb.append(", state=");
		sb.append(getState());
		sb.append(", number=");
		sb.append(getNumber());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.liferay.lmssa.model.ActManAudit");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actManAuditId</column-name><column-value><![CDATA[");
		sb.append(getActManAuditId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>courseId</column-name><column-value><![CDATA[");
		sb.append(getCourseId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>className</column-name><column-value><![CDATA[");
		sb.append(getClassName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>start</column-name><column-value><![CDATA[");
		sb.append(getStart());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>end</column-name><column-value><![CDATA[");
		sb.append(getEnd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>state</column-name><column-value><![CDATA[");
		sb.append(getState());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>number</column-name><column-value><![CDATA[");
		sb.append(getNumber());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ActManAudit.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			ActManAudit.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _actManAuditId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private long _courseId;
	private String _className;
	private Date _start;
	private Date _end;
	private String _state;
	private long _number;
	private long _columnBitmask;
	private ActManAudit _escapedModelProxy;
}